#!/bin/bash

# Script: port?
# Description: Find which process is using a given port
# Usage: port? <port_number>

if [ $# -eq 0 ]; then
  echo "Usage: port? <port_number>"
  echo "Example: port? 3000"
  exit 1
fi

PORT=$1

# Check if port is a valid number
if ! [[ "$PORT" =~ ^[0-9]+$ ]]; then
  echo "Error: Port must be a number"
  exit 1
fi

echo "Checking port $PORT..."
echo "========================"

# Try different methods to find the process
found=false

# Method 1: Using lsof (most detailed)
if command -v lsof >/dev/null 2>&1; then
  echo "Using lsof:"
  result=$(lsof -i :$PORT 2>/dev/null)
  if [ -n "$result" ]; then
    echo "$result"
    found=true
  else
    echo "No process found using lsof"
  fi
  echo
fi

# # Method 2: Using netstat
# if command -v netstat >/dev/null 2>&1; then
#   echo "Using netstat:"
#   result=$(netstat -tlnp 2>/dev/null | grep ":$PORT ")
#   if [ -n "$result" ]; then
#     echo "Proto Recv-Q Send-Q Local Address           Foreign Address         State       PID/Program name"
#     echo "$result"
#     found=true
#   else
#     echo "No process found using netstat"
#   fi
#   echo
# fi
#
# # Method 3: Using ss (modern replacement for netstat)
# if command -v ss >/dev/null 2>&1; then
#   echo "Using ss:"
#   result=$(ss -tlnp 2>/dev/null | grep ":$PORT ")
#   if [ -n "$result" ]; then
#     echo "$result"
#     found=true
#   else
#     echo "No process found using ss"
#   fi
#   echo
# fi
#
# # Method 4: Check /proc/net/tcp (fallback)
# if [ "$found" = false ]; then
#   echo "Checking /proc/net/tcp:"
#   # Convert port to hex
#   port_hex=$(printf "%04X" $PORT)
#
#   result=$(grep ":$port_hex " /proc/net/tcp 2>/dev/null)
#   if [ -n "$result" ]; then
#     echo "Found in /proc/net/tcp (raw format):"
#     echo "$result"
#
#     # Try to get PID from the inode
#     while read line; do
#       inode=$(echo $line | awk '{print $10}')
#       if [ "$inode" != "0" ]; then
#         pid=$(find /proc/*/fd -lname "socket:\[$inode\]" 2>/dev/null | head -1 | cut -d/ -f3)
#         if [ -n "$pid" ]; then
#           cmd=$(ps -p $pid -o comm= 2>/dev/null)
#           echo "Process: $cmd (PID: $pid)"
#           found=true
#         fi
#       fi
#     done <<<"$result"
#   fi
# fi

if [ "$found" = false ]; then
  echo "No process found using port $PORT"
  echo "The port might be:"
  echo "- Not in use"
  echo "- Used by a process you don't have permission to see"
  echo "- Used by a kernel process"
  exit 1
fi
